version: "3.7"

services:

  db:
    platform: linux/x86_64
    image: mysql

    container_name: mysql-db

    restart: always

    environment:
      MYSQL_RANDOM_ROOT_PASSWORD: "yes"
      MYSQL_DATABASE: ${DB_NAME:-minitube1}
      MYSQL_PASSWORD: ${DB_PASSWORD:-minitube1}
      MYSQL_USER: ${DB_USER:-minitube1}
      MYSQL_ROOT_HOST: "172.*.*.*"

    ports:
      - "3306:3306"

  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.15.2
    container_name: es01
    environment:
      - node.name=es01
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es02
      - cluster.initial_master_nodes=es01,es02
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1

    volumes:
      - data01:/usr/share/elasticsearch/data

    ports:
      - '9200:9200'

  es02:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.15.2
    container_name: es02
    environment:
      - node.name=es02
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es01
      - cluster.initial_master_nodes=es01,es02
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data02:/usr/share/elasticsearch/data

  zookeeper:
    image: 'bitnami/zookeeper:latest'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: 'bitnami/kafka:latest'
    ports:
      - '9092:9092'
      - '9093:9093'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9093
      - KAFKA_INTER_BROKER_LISTENER_NAME=CLIENT
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    depends_on:
      - zookeeper

  web_server:
    container_name: web_server-container

    build:
      context: ./web_server
      dockerfile: Dockerfile

    restart: always

    environment:
      DJANGO_SETTINGS_MODULE: ${DJANGO_SETTINGS_MODULE:-settings.production}
      DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY:-secret}

      DB_HOST: ${DB_HOST:-db}
      DB_PORT: ${DB_PORT:-3306}
      DB_USER: ${DB_USER:-minitube1}
      DB_PASSWORD: ${DB_PASSWORD:-minitube1}
      DB_NAME: ${DB_NAME:-minitube1}

      KAKFA_BROKERS: ${KAKFA_BROKERS:-kafka:9092}
      KAKFA_CRAWLER_START_TOPIC: ${KAKFA_CRAWLER_START_TOPIC:-minitube-crawler-init}
      KAKFA_SEARCH_INDEX_TOPIC: ${KAKFA_SEARCH_INDEX_TOPIC:-minitube-index}
      KAKFA_SEARCH_INDEX_CONSUMER_GRP: ${KAKFA_SEARCH_INDEX_CONSUMER_GRP:-minitube-index}

      ELASTIC_SEARCH_BASE_URL: ${ELASTIC_SEARCH_BASE_URL:-http://es01:9200}
      ES_INDEX_YT: ${ES_INDEX_YT:-youtube_videos}

    ports:
      - "8000:8000"

    command: ./web_server_runner.sh

    depends_on:
      - db
      - zookeeper
      - kafka
      - es01
      - es02

  indexer_worker:
    container_name: indexer_worker-container

    build:
      context: ./web_server
      dockerfile: Dockerfile

    restart: always

    environment:
      DJANGO_SETTINGS_MODULE: ${DJANGO_SETTINGS_MODULE:-settings.production}
      DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY:-secret}

      DB_HOST: ${DB_HOST:-db}
      DB_PORT: ${DB_PORT:-3306}
      DB_USER: ${DB_USER:-minitube1}
      DB_PASSWORD: ${DB_PASSWORD:-minitube1}
      DB_NAME: ${DB_NAME:-minitube1}

      KAKFA_BROKERS: ${KAKFA_BROKERS:-kafka:9092}
      KAKFA_SEARCH_INDEX_TOPIC: ${KAKFA_SEARCH_INDEX_TOPIC:-minitube-index}
      KAKFA_SEARCH_INDEX_CONSUMER_GRP: ${KAKFA_SEARCH_INDEX_CONSUMER_GRP:-minitube-index}

      ELASTIC_SEARCH_BASE_URL: ${ELASTIC_SEARCH_BASE_URL:-http://es01:9200}
      ES_INDEX_YT: ${ES_INDEX_YT:-youtube_videos}

    command: ./indexer_worker_runner.sh

    depends_on:
      - web_server

volumes:
  data01:
    driver: local
  data02:
    driver: local
